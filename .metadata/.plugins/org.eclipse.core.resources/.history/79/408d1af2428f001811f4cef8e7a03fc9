package com.cornchipss.keyrunner;

import java.io.IOException;

import org.jnativehook.GlobalScreen;
import org.jnativehook.NativeHookException;
import org.jnativehook.keyboard.NativeKeyEvent;
import org.jnativehook.keyboard.NativeKeyListener;

public class KeyRunner implements NativeKeyListener
{
	private boolean altPressed = false;
	
	public static void main(String[] args)
	{
		try
		{
			GlobalScreen.registerNativeHook();
			
			GlobalScreen.addNativeKeyListener(new KeyRunner());
		}
		catch (NativeHookException ex)
		{
			System.err.println("There was a problem registering the native hook.");
			System.err.println(ex.getMessage());

			System.exit(1);
		}
	}
	
	public void nativeKeyPressed(NativeKeyEvent e)
	{
		if(e.getKeyCode() == NativeKeyEvent.VC_ALT)
		{
			altPressed = true;
		}
		
		if(altPressed && cfg.containsKey(e.getKeyCode() + ""))
		{
			System.out.println("Running program.");
			String path = cfg.getString(e.getKeyCode() + "");
			
			try
			{
				Runtime.getRuntime().exec(path);
			}
			catch (IOException e1)
			{
				e1.printStackTrace();
			}
		}
		
		if(altPressed && e.getKeyCode() == NativeKeyEvent.VK_P)
		{
			running = false;
			System.exit(0);
		}
	}

	@Override
	public void nativeKeyReleased(NativeKeyEvent e)
	{
		if(e.getKeyCode() == NativeKeyEvent.VK_ALT)
		{
			altPressed = false;
		}
	}

	public void nativeKeyTyped(NativeKeyEvent e)
	{
		System.out.println("Key Typed: " + NativeKeyEvent.getKeyText(e.getKeyCode()));
	}
}
