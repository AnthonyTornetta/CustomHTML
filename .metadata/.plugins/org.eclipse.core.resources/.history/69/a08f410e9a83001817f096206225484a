package com.cornchipss.mgr;

import java.io.IOException;

import org.jnativehook.GlobalScreen;
import org.jnativehook.NativeHookException;
import org.jnativehook.keyboard.NativeKeyEvent;
import org.jnativehook.keyboard.NativeKeyListener;

import com.cornchipss.util.Config;

public class ProgramManager implements NativeKeyListener
{
	private static boolean altPressed = false;
	private static Config cfg = new Config("config.yml");
	private static boolean running = true;
	
	public static void main(String[] args)
	{		
		try
		{
			GlobalScreen.registerNativeHook();
		}
		catch(NativeHookException ex)
		{
			ex.printStackTrace();
		}
		GlobalScreen.getInstance().addNativeKeyListener(new ProgramManager());
		
		while(running)
		{
			try
			{
				Thread.sleep(1000);
			}
			catch (InterruptedException e)
			{}
		}
	}
	
	@Override
	public void nativeKeyPressed(NativeKeyEvent e)
	{
		if(e.getKeyCode() == NativeKeyEvent.VK_ALT)
		{
			altPressed = true;
		}
		
		if(altPressed && cfg.containsKey(e.getKeyCode() + ""))
		{
			System.out.println('a');
			String path = cfg.getString(e.getKeyCode() + "");
			
			try
			{
				Runtime.getRuntime().exec(path);
			}
			catch (IOException e1)
			{
				e1.printStackTrace();
			}
		}
		
		if(altPressed && e.getKeyCode() == NativeKeyEvent.VK_P)
		{
			running = false;
			System.exit(0);
		}
	}

	@Override
	public void nativeKeyReleased(NativeKeyEvent e)
	{
		if(e.getKeyCode() == NativeKeyEvent.VK_ALT)
		{
			altPressed = false;
		}
	}

	@Override
	public void nativeKeyTyped(NativeKeyEvent e)
	{
		
	}
}
